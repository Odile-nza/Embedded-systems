

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 24 22:21:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.32
    14                           ; Generated 02/02/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170  07A0                     __pidataBANK0:
   171                           
   172                           ;initializer for _ssd
   173  07A0  34BF               	retlw	191
   174  07A1  3486               	retlw	134
   175  07A2  34DB               	retlw	219
   176  07A3  34CF               	retlw	207
   177  07A4  34E6               	retlw	230
   178  07A5  34ED               	retlw	237
   179  07A6  34FD               	retlw	253
   180  07A7  3487               	retlw	135
   181  07A8  34FF               	retlw	255
   182  07A9  34EF               	retlw	239
   183  0007                     _PORTC	set	7
   184  0087                     _TRISC	set	135
   185                           
   186                           	psect	cinit
   187  07EE                     start_initialization:	
   188                           ; #config settings
   189                           
   190  07EE                     __initialization:
   191                           
   192                           ; Initialize objects allocated to BANK0
   193  07EE  1383               	bcf	3,7	;select IRP bank0
   194  07EF  302A               	movlw	low (__pdataBANK0+10)
   195  07F0  00FD               	movwf	btemp+-1
   196  07F1  3007               	movlw	high __pidataBANK0
   197  07F2  00FE               	movwf	btemp
   198  07F3  30A0               	movlw	low __pidataBANK0
   199  07F4  00FF               	movwf	btemp+1
   200  07F5  3020               	movlw	low __pdataBANK0
   201  07F6  0084               	movwf	4
   202  07F7  120A  118A  27AE  120A  118A  	fcall	init_ram0
   203  07FC                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206  07FC                     __end_of__initialization:
   207  07FC  0183               	clrf	3
   208  07FD  120A  118A  2FBD   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	dataBANK0
   211  0020                     __pdataBANK0:
   212  0020                     _ssd:
   213  0020                     	ds	10
   214                           
   215                           	psect	inittext
   216  07AA                     init_fetch0:	
   217                           ;	Called with low address in FSR and high address in W
   218                           
   219  07AA  087E               	movf	btemp,w
   220  07AB  008A               	movwf	10
   221  07AC  087F               	movf	btemp+1,w
   222  07AD  0082               	movwf	2
   223  07AE                     init_ram0:	
   224                           ;Called with:
   225                           ;	high address of idata address in btemp 
   226                           ;	low address of idata address in btemp+1 
   227                           ;	low address of data in FSR
   228                           ;	high address + 1 of data in btemp-1
   229                           
   230  07AE  120A  118A  27AA  120A  118A  	fcall	init_fetch0
   231  07B3  0080               	movwf	0
   232  07B4  0A84               	incf	4,f
   233  07B5  0804               	movf	4,w
   234  07B6  067D               	xorwf	btemp+-1,w
   235  07B7  1903               	btfsc	3,2
   236  07B8  3400               	retlw	0
   237  07B9  0AFF               	incf	btemp+1,f
   238  07BA  1903               	btfsc	3,2
   239  07BB  0AFE               	incf	btemp,f
   240  07BC  2FAE               	goto	init_ram0
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:
   244  0070                     ??_main:
   245  0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248                           
   249                           ; 2 bytes @ 0x0
   250  0070                     	ds	3
   251  0073                     main@i:
   252                           
   253                           ; 2 bytes @ 0x3
   254  0073                     	ds	2
   255                           
   256                           	psect	maintext
   257  07BD                     __pmaintext:	
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 25 in file "source.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;  i               2    3[COMMON] int 
   268 ;; Return value:  Size  Location     Type
   269 ;;                  2   12[None  ] int 
   270 ;; Registers used:
   271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   272 ;; Tracked objects:
   273 ;;		On entry : B00/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   277 ;;      Params:         0       0       0       0       0
   278 ;;      Locals:         2       0       0       0       0
   279 ;;      Temps:          3       0       0       0       0
   280 ;;      Totals:         5       0       0       0       0
   281 ;;Total ram usage:        5 bytes
   282 ;; This function calls:
   283 ;;		Nothing
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           
   290                           ;psect for function _main
   291  07BD                     _main:
   292  07BD                     l624:	
   293                           ;incstack = 0
   294                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   295                           
   296                           
   297                           ;source.c: 27:     int i;;source.c: 29:     TRISC = 0x00;
   298  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   299  07BE  1303               	bcf	3,6	;RP1=0, select bank1
   300  07BF  0187               	clrf	7	;volatile
   301  07C0                     l13:	
   302                           ;source.c: 31:     while (1)
   303                           
   304                           
   305                           ;source.c: 32:     {;source.c: 33:         for (i = 0; i <= 9; i++)
   306  07C0  01F3               	clrf	main@i
   307  07C1  01F4               	clrf	main@i+1
   308  07C2                     l630:
   309                           
   310                           ;source.c: 34:         {;source.c: 35:             PORTC = ssd[i];
   311  07C2  0873               	movf	main@i,w
   312  07C3  3E20               	addlw	(low (_ssd| 0))& (0+255)
   313  07C4  0084               	movwf	4
   314  07C5  1383               	bcf	3,7	;select IRP bank0
   315  07C6  0800               	movf	0,w
   316  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   317  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   318  07C9  0087               	movwf	7	;volatile
   319  07CA                     l632:
   320                           
   321                           ;source.c: 36:             _delay((unsigned long)((1000)*(8000000/4000.0)));
   322  07CA  300B               	movlw	11
   323  07CB  00F2               	movwf	??_main+2
   324  07CC  3026               	movlw	38
   325  07CD  00F1               	movwf	??_main+1
   326  07CE  305D               	movlw	93
   327  07CF  00F0               	movwf	??_main
   328  07D0                     u37:
   329  07D0  0BF0               	decfsz	??_main,f
   330  07D1  2FD0               	goto	u37
   331  07D2  0BF1               	decfsz	??_main+1,f
   332  07D3  2FD0               	goto	u37
   333  07D4  0BF2               	decfsz	??_main+2,f
   334  07D5  2FD0               	goto	u37
   335  07D6  2FD7               	nop2
   336  07D7                     l634:
   337                           
   338                           ;source.c: 37:         }
   339  07D7  3001               	movlw	1
   340  07D8  07F3               	addwf	main@i,f
   341  07D9  1803               	skipnc
   342  07DA  0AF4               	incf	main@i+1,f
   343  07DB  3000               	movlw	0
   344  07DC  07F4               	addwf	main@i+1,f
   345  07DD                     l636:
   346  07DD  0874               	movf	main@i+1,w
   347  07DE  3A80               	xorlw	128
   348  07DF  00FF               	movwf	btemp+1
   349  07E0  3080               	movlw	128
   350  07E1  027F               	subwf	btemp+1,w
   351  07E2  1D03               	skipz
   352  07E3  2FE6               	goto	u25
   353  07E4  300A               	movlw	10
   354  07E5  0273               	subwf	main@i,w
   355  07E6                     u25:
   356  07E6  1C03               	skipc
   357  07E7  2FE9               	goto	u21
   358  07E8  2FEA               	goto	u20
   359  07E9                     u21:
   360  07E9  2FC2               	goto	l630
   361  07EA                     u20:
   362  07EA  2FC0               	goto	l13
   363  07EB  120A  118A  2800   	ljmp	start
   364  07EE                     __end_of_main:
   365  007E                     btemp	set	126	;btemp
   366  007E                     wtemp0	set	126
   367                           
   368                           	psect	config
   369                           
   370                           ;Config register CONFIG @ 0x2007
   371                           ;	Oscillator Selection bits
   372                           ;	FOSC = EXTRC, RC oscillator
   373                           ;	Watchdog Timer Enable bit
   374                           ;	WDTE = OFF, WDT disabled
   375                           ;	Power-up Timer Enable bit
   376                           ;	PWRTE = OFF, PWRT disabled
   377                           ;	Brown-out Reset Enable bit
   378                           ;	BOREN = ON, BOR enabled
   379                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   380                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   381                           ;	Data EEPROM Memory Code Protection bit
   382                           ;	CPD = OFF, Data EEPROM code protection off
   383                           ;	Flash Program Memory Write Enable bits
   384                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   385                           ;	In-Circuit Debugger Mode bit
   386                           ;	DEBUG = 0x1, unprogrammed default
   387                           ;	Flash Program Memory Code Protection bit
   388                           ;	CP = OFF, Code protection off
   389  2007                     	org	8199
   390  2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      68
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      12        0.0%
ABS                  0      0       F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 24 22:21:25 2021

                      pc 0002                       l13 07C0                       u20 07EA  
                     u21 07E9                       u25 07E6                       u37 07D0  
                     fsr 0004                      l630 07C2                      l632 07CA  
                    l624 07BD                      l634 07D7                      l636 07DD  
                    _ssd 0020                      fsr0 0004                      indf 0000  
                   _main 07BD                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTC 0007                    _TRISC 0087  
                  main@i 0073                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 07A0               __pmaintext 07BD     end_of_initialization 07FC  
    start_initialization 07EE               init_fetch0 07AA              __pdataBANK0 0020  
              ___latbits 0002            __size_of_main 0031                 init_ram0 07AE  
